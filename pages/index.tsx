import type { NextPage } from "next";
import Input from "@components/Input";
import Label from "@components/Label";
import Head from "next/head";
import Image from "next/image";
import { ChangeEventHandler, useState } from "react";
import emailValidate from "@utils/email-validate";

const Home: NextPage = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isError, setIsError] = useState(false);

  const onChangeEmail: ChangeEventHandler<HTMLInputElement> = (e) => {
    if (!emailValidate(email)) {
      setIsError(true);
    }
    setEmail(e.target.value);
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <form onSubmit={() => {}}>
        <Label htmlFor="email">
          <span>Email Address</span>
          <Input
            type="email"
            id="email"
            name="email"
            value={email}
            onChange={onChangeEmail}
          />
        </Label>
        <Label htmlFor="password">
          <span>Password</span>
          <Input
            type="password"
            id="password"
            name="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
        </Label>
        <Label htmlFor="confirm-password">
          <span>Confirm Password</span>
          <Input
            type="password"
            id="confirm-password"
            name="confirm-password"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
          />
        </Label>
        {isError && <p>the email you input is invalid</p>}
        <button type="submit">제출하기</button>
      </form>
    </div>
  );
};

export default Home;
